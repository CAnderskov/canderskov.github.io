<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CAnderskov - Notes To Self..</title>
    <link>https://canderskov.github.io/index.xml</link>
    <description>Recent content on CAnderskov - Notes To Self..</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Jan 2017 18:19:49 +0100</lastBuildDate>
    <atom:link href="https://canderskov.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Running Hugo from github.io root</title>
      <link>https://canderskov.github.io/post/Running_Hugo_from_gitpages/</link>
      <pubDate>Tue, 31 Jan 2017 18:19:49 +0100</pubDate>
      
      <guid>https://canderskov.github.io/post/Running_Hugo_from_gitpages/</guid>
      <description>

&lt;h3 id=&#34;hugo-on-github-io-root&#34;&gt;Hugo on Github.io root&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;when follwing the official guide.. atleast, not for me.. I wanted to run it from root of my github.io account, which meant setting up the deploy of hugo following this bit: &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/#hosting-personal-organization-pages&#34;&gt;https://gohugo.io/tutorials/github-pages-blog/#hosting-personal-organization-pages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Granted, im still getting to know git, trying out the guide over multiple attempts only gave the exact same result over and over again, the deploy script would push the changes, but push em to the hugo repo, not the github.io repo, i managed to get it to work in one gitbash session, but after restarting that i was back to square one.
This is when i started googling other results, i did find some, that did things similar to what i ended up doing was inspired heavily by the blog post here: &lt;a href=&#34;http://charliegriefer.github.io/posts/2016/07/29/hugo-on-github-pages/&#34;&gt;http://charliegriefer.github.io/posts/2016/07/29/hugo-on-github-pages/&lt;/a&gt; but instead with a slight modification of me copying and overwriting files from my hugo repo instead of rm&amp;rsquo;ing the folder posts folder, I was unsure how hugo handles files already being there when doing a build, and i figured that someday, down the line i might want to do things out of the posts directory.. which is why I modified the bash script to fit my needs. this was a quick and dirty kinda thing that i just wanted to get over with, All credit for the original script goes to @charliegriefer.github.io&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;notes-gotchas&#34;&gt;Notes / gotchas&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If I had rsync avalible in gitbash, i would have used it&lt;/li&gt;
&lt;li&gt;Since i remove all files everytime i do a deploy, all files will look like fresh files and get re-commited to the repo even tho theres nothing new in them, this is a minor detail to me, as the history of what happens in what files is being logged in my hugo soruce file repo anyway, still, its worth a mention.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
SORUCEFOLDER=&amp;quot;CAnderskov-hugo&amp;quot;
PUBLICFOLDER=&amp;quot;canderskov.github.io&amp;quot;

echo -e &amp;quot;\033[0;32mDeploying new page...\033[0m&amp;quot;

echo -e &amp;quot;\033[0;32mGenerating new html...\033[0m&amp;quot;
hugo -t hugo-redlounge


echo -e &amp;quot;\033[0;32mChecking if directory exists..\033[0m&amp;quot;
if [ ! -d &amp;quot;../$PUBLICFOLDER&amp;quot; ]; then
	PWD=pwd
  	cd ..
   echo -e &amp;quot;\033[0;32mNo github.io repo folder found, pulling fresh version into $PWD...\033[0m&amp;quot;
   git clone git@github.com:CAnderskov/canderskov.github.io.git
else
	echo -e &amp;quot;\033[0;32mDirectory found, cleaning folder for new build..\033[0m&amp;quot;
	cd ../$PUBLICFOLDER
	rm -rf *
fi

echo -e &amp;quot;\033[0;32mMoving new html to repo folder...\033[0m&amp;quot;
cp -r ../$SORUCEFOLDER/public/* ../$PUBLICFOLDER
echo -e &amp;quot;\033[0;32mChanging to blog directory...\033[0m&amp;quot;
cd ../$PUBLICFOLDER

echo -e &amp;quot;\033[0;32mCommit and push the new build...\033[0m&amp;quot;
git add --a
git commit -am &amp;quot;Site Build (`date`)&amp;quot;
git push -f origin master

echo -e &amp;quot;\033[0;32mChange back to hugo soruce...\033[0m&amp;quot;
cd ../$SORUCEFOLDER

echo -e &amp;quot;\033[0;32mDeploy complete.\033[0m&amp;quot;


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Bash/JQ To Influx Http API</title>
      <link>https://canderskov.github.io/post/BashJQToInfluxLineProtocol/</link>
      <pubDate>Mon, 30 Jan 2017 09:34:12 +0100</pubDate>
      
      <guid>https://canderskov.github.io/post/BashJQToInfluxLineProtocol/</guid>
      <description>

&lt;h3 id=&#34;why&#34;&gt;Why&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/influxdata/telegraf&#34;&gt;Telegraf&lt;/a&gt; supports reading json and writing it to influxdb, however as of writing this, it only support grabbing numeric values, I need to grab text as well.
Im sure there are smarter easier ways of doing this, and id love to hear about em, for now, this is what i was able to come up with&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;a-snippet-of-the-json-the-following-bash-script-is-scraping-for-context&#34;&gt;A snippet of the json the following bash script is scraping for context:&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;
{
	ServerNames: [
	{
		Time: 1485883080000000000,
		servername: &amp;quot;ServerName01&amp;quot;,
		Count: 27
	},
	{
		Time: 1485883080000000000,
		servername: &amp;quot;ServerName02&amp;quot;,
		Count: 1
	}
	]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1 id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
    {{ range .Data.Pages }}
      {{ .Render &amp;quot;summary&amp;quot;}}
    {{ end }}
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;The bash script:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
#!/bin/sh

#JSON to influx line protocol reformatter, Since the built in json parser of telegraf have a bug handling arrays the simplets way to get arrays of datas into influx was to write this simple reformatter, from json to line.
# By Christian Anderskov Petersen christian@anderskov.dk

#Get the JSON and stick it in a variable we can pullout our data from
OUTPUT=$(curl -sS --header &#39;Accept: application/json&#39; -X GET &#39;http://jsonurl&#39;)

# INFLUXDB CONNECTION STRING
INFLUXHOST=&#39;http://localhost:8086/write?db=influxdb&#39;
AUTHDETAILS=&#39;XXXXXXXX:XXXXXXXX&#39;

# Define root element and which child nodes to pick out from the selected root element, if more CHILDS are add&#39;d the below while statement will have to be updated accordingly, not that influx does not allow for whitespces in its input, so if new add&#39;d childs might contain spaces the &amp;quot;sed&amp;quot; whille have to be used to &amp;quot;escape&amp;quot; the whitespace before input.
ROOT_NODE=&#39;ServerNames&#39;
TIME_NODE=&#39;Time&#39;
CHILD_NODE_FIRST=&#39;servername&#39;
CHILD_NODE_SECOND=&#39;Count&#39;

#Count the amount of json we got to loop through
END=$( echo &amp;quot;$OUTPUT&amp;quot; | jq --arg x $ROOT_NODE &#39;.&#39;$ROOT_NODE&#39; | length&#39;)

i=0
while [ $i -lt $END ]; do
        #sed command explained: influx does not allow space, comma or equeal signs in its input, therefore they need to be escaped with a \
        TIME=$( echo &amp;quot;$OUTPUT&amp;quot; | jq -r --arg x $i --arg y $ROOT_NODE --arg z $TIME_NODE &#39;.&#39;$ROOT_NODE&#39;[&#39;$i&#39;].&#39;$TIME_NODE&#39;&#39;)
        FIRST=$( echo &amp;quot;$OUTPUT&amp;quot; | jq -r --arg x $i --arg y $ROOT_NODE --arg z $CHILD_NODE_FIRST &#39;.&#39;$ROOT_NODE&#39;[&#39;$i&#39;].&#39;$CHILD_NODE_FIRST&#39;&#39; |  sed -e &amp;quot;s/ /\\\ /g;
s/=/\\\=/g; s/,/\\\,/g&amp;quot;)
        SECOND=$( echo &amp;quot;$OUTPUT&amp;quot; | jq -r --arg x $i --arg y $ROOT_NODE --arg z $CHILD_NODE_SECOND &#39;.&#39;$ROOT_NODE&#39;[&#39;$i&#39;].&#39;$CHILD_NODE_SECOND&#39;&#39;)

        RESULT=$( echo $ROOT_NODE,$CHILD_NODE_FIRST\=$FIRST $CHILD_NODE_SECOND\=$SECOND $TIME)
        curl -i -silent -XPOST &amp;quot;$INFLUXHOST&amp;quot; -u &amp;quot;$AUTHDETAILS&amp;quot; --data-binary &amp;quot;$RESULT&amp;quot; &amp;gt; /dev/null

        let i=i+1
done
DATE=$(date +&amp;quot;%c&amp;quot;)
echo $DATE - Wrote $i entries to $INFLUXHOST &amp;gt;&amp;gt; /var/log/influxcollectors/$ROOT_NODE.log
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hi Hugo! Nice To Meet You</title>
      <link>https://canderskov.github.io/post/HiHugoNiceToMeetYou/</link>
      <pubDate>Mon, 30 Jan 2017 08:59:43 +0100</pubDate>
      
      <guid>https://canderskov.github.io/post/HiHugoNiceToMeetYou/</guid>
      <description>

&lt;h3 id=&#34;getting-to-know-hugo&#34;&gt;Getting to know Hugo&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I first came across Static sites a while back, when reading something about something nerdy.. The guy writing the blog i cant remember was talking about how he finally finished migrating to jekyll.. I thought jekyll, what is that.. Ive for the longest time had the need to have a place to put notes about what i do for later use, my bookmark collection is getting out of hand, and most of the time i only use small snippets of what the bookmarked page contains, what i need is a library where i can write a short note about what ive used it for and a reference to it.&lt;/p&gt;

&lt;p&gt;This is that..&lt;/p&gt;

&lt;p&gt;So why am i on Hugo and not jekyll? Well, its simple, Hugo worked, Jekyll did not.. Or rather, Jekyll worked, with the default theme, as soon as i tried to change it it went nuts about layouts not found, fixing those errors made the entire thing go completely blank.. not wanting to was countless of hours on learning this static site thing i quickly moved on to look for alternatives.. Queue Hugo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;setting-up-hugo&#34;&gt;Setting up Hugo&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Download hugo executable from &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add hugo to path or add the directory with hugo.exe to path (the latter did not work for me, so i put the exe in a folder already in path seeing as my patiance was very short in getting Windows to not be Windows.)&lt;/li&gt;
&lt;li&gt;Download a theme from &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Figure out and get to know Markdown and you are all set.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;quick-tips&#34;&gt;Quick tips&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Get gitbash, get used to it, never go back to windows cmd.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo server -w&lt;/code&gt; in a gitbash while you write your pages will auto update every time you save&lt;/li&gt;
&lt;li&gt;if you are switching themes &lt;code&gt;hugo server -w&lt;/code&gt; needs to be restarted it will not update correctly, same goes for update to the index pages.&lt;/li&gt;
&lt;li&gt;Current theme: &lt;a href=&#34;https://github.com/tmaiaroto/hugo-redlounge&#34;&gt;https://github.com/tmaiaroto/hugo-redlounge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://canderskov.github.io/about/aboutme/</link>
      <pubDate>Mon, 30 Jan 2017 08:40:10 +0100</pubDate>
      
      <guid>https://canderskov.github.io/about/aboutme/</guid>
      <description>&lt;h3&gt;Christian Anderskov here, Hi!&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;33 years of age at present, Started my education in 1999 so been involved with IT in one way or another for the past 18 years, after finishing my education I&amp;rsquo;ve spent most of my time in Operations, Starting with Windows, moving to Linux, and lately moving to development, Primarily .NET. With a side of bash / power-shell scripting when something needed some quick and dirty automation.&lt;/p&gt;

&lt;p&gt;Ive build a NOC screen solution for work, which via a .NET app probes the json output of a Icinga server, and displays that on screens with green, yellow and red, And most recently setup Influxdb for collecting site activity metrics, and Server health / performance stats to be displayed in grafana.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>