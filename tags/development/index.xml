<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on CAnderskov - Notes To Self..</title>
    <link>https://canderskov.github.io/tags/development/index.xml</link>
    <description>Recent content in Development on CAnderskov - Notes To Self..</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://canderskov.github.io/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Running Hugo from github.io root</title>
      <link>https://canderskov.github.io/post/Running_Hugo_from_gitpages/</link>
      <pubDate>Tue, 31 Jan 2017 18:19:49 +0100</pubDate>
      
      <guid>https://canderskov.github.io/post/Running_Hugo_from_gitpages/</guid>
      <description>

&lt;h3 id=&#34;hugo-on-github-io-root&#34;&gt;Hugo on Github.io root&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;when follwing the official guide.. atleast, not for me.. I wanted to run it from root of my github.io account, which meant setting up the deploy of hugo following this bit: &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/#hosting-personal-organization-pages&#34;&gt;https://gohugo.io/tutorials/github-pages-blog/#hosting-personal-organization-pages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Granted, im still getting to know git, trying out the guide over multiple attempts only gave the exact same result over and over again, the deploy script would push the changes, but push em to the hugo repo, not the github.io repo, i managed to get it to work in one gitbash session, but after restarting that i was back to square one.
This is when i started googling other results, i did find some, that did things similar to what i ended up doing was inspired heavily by the blog post here: &lt;a href=&#34;http://charliegriefer.github.io/posts/2016/07/29/hugo-on-github-pages/&#34;&gt;http://charliegriefer.github.io/posts/2016/07/29/hugo-on-github-pages/&lt;/a&gt; but instead with a slight modification of me copying and overwriting files from my hugo repo instead of rm&amp;rsquo;ing the folder posts folder, I was unsure how hugo handles files already being there when doing a build, and i figured that someday, down the line i might want to do things out of the posts directory.. which is why I modified the bash script to fit my needs. this was a quick and dirty kinda thing that i just wanted to get over with, All credit for the original script goes to @charliegriefer.github.io&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying new page...\033[0m&amp;quot;

echo -e &amp;quot;\033[0;32mGenerating new html...\033[0m&amp;quot;
hugo -t hugo-redlounge

echo -e &amp;quot;\033[0;32mMoving new html to repo folder...\033[0m&amp;quot;
mv public ../canderkov.github.io
echo -e &amp;quot;\033[0;32mChanging to blog directory...\033[0m&amp;quot;
cd ../canderskov.github.io

echo -e &amp;quot;\033[0;32mCommit and push the new build...\033[0m&amp;quot;
git add --a
git commit -am &amp;quot;Site Build (`date`)&amp;quot;
git push -f origin master

echo -e &amp;quot;\033[0;32mChange back to hugo soruce...\033[0m&amp;quot;
cd ../CAnderskov-hugo

echo -e &amp;quot;\033[0;32mDeploy complete.\033[0m&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Bash/JQ To Influx Http API</title>
      <link>https://canderskov.github.io/post/BashJQToInfluxLineProtocol/</link>
      <pubDate>Mon, 30 Jan 2017 09:34:12 +0100</pubDate>
      
      <guid>https://canderskov.github.io/post/BashJQToInfluxLineProtocol/</guid>
      <description>

&lt;h3 id=&#34;why&#34;&gt;Why&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/influxdata/telegraf&#34;&gt;Telegraf&lt;/a&gt; supports reading json and writing it to influxdb, however as of writing this, it only support grabbing numeric values, I need to grab text as well.
Im sure there are smarter easier ways of doing this, and id love to hear about em, for now, this is what i was able to come up with&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;a-snippet-of-the-json-the-following-bash-script-is-scraping-for-context&#34;&gt;A snippet of the json the following bash script is scraping for context:&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;
{
	ServerNames: [
	{
		Time: 1485883080000000000,
		servername: &amp;quot;ServerName01&amp;quot;,
		Count: 27
	},
	{
		Time: 1485883080000000000,
		servername: &amp;quot;ServerName02&amp;quot;,
		Count: 1
	}
	]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1 id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
    {{ range .Data.Pages }}
      {{ .Render &amp;quot;summary&amp;quot;}}
    {{ end }}
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;The bash script:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
#!/bin/sh

#JSON to influx line protocol reformatter, Since the built in json parser of telegraf have a bug handling arrays the simplets way to get arrays of datas into influx was to write this simple reformatter, from json to line.
# By Christian Anderskov Petersen christian@anderskov.dk

#Get the JSON and stick it in a variable we can pullout our data from
OUTPUT=$(curl -sS --header &#39;Accept: application/json&#39; -X GET &#39;http://jsonurl&#39;)

# INFLUXDB CONNECTION STRING
INFLUXHOST=&#39;http://localhost:8086/write?db=influxdb&#39;
AUTHDETAILS=&#39;XXXXXXXX:XXXXXXXX&#39;

# Define root element and which child nodes to pick out from the selected root element, if more CHILDS are add&#39;d the below while statement will have to be updated accordingly, not that influx does not allow for whitespces in its input, so if new add&#39;d childs might contain spaces the &amp;quot;sed&amp;quot; whille have to be used to &amp;quot;escape&amp;quot; the whitespace before input.
ROOT_NODE=&#39;ServerNames&#39;
TIME_NODE=&#39;Time&#39;
CHILD_NODE_FIRST=&#39;servername&#39;
CHILD_NODE_SECOND=&#39;Count&#39;

#Count the amount of json we got to loop through
END=$( echo &amp;quot;$OUTPUT&amp;quot; | jq --arg x $ROOT_NODE &#39;.&#39;$ROOT_NODE&#39; | length&#39;)

i=0
while [ $i -lt $END ]; do
        #sed command explained: influx does not allow space, comma or equeal signs in its input, therefore they need to be escaped with a \
        TIME=$( echo &amp;quot;$OUTPUT&amp;quot; | jq -r --arg x $i --arg y $ROOT_NODE --arg z $TIME_NODE &#39;.&#39;$ROOT_NODE&#39;[&#39;$i&#39;].&#39;$TIME_NODE&#39;&#39;)
        FIRST=$( echo &amp;quot;$OUTPUT&amp;quot; | jq -r --arg x $i --arg y $ROOT_NODE --arg z $CHILD_NODE_FIRST &#39;.&#39;$ROOT_NODE&#39;[&#39;$i&#39;].&#39;$CHILD_NODE_FIRST&#39;&#39; |  sed -e &amp;quot;s/ /\\\ /g;
s/=/\\\=/g; s/,/\\\,/g&amp;quot;)
        SECOND=$( echo &amp;quot;$OUTPUT&amp;quot; | jq -r --arg x $i --arg y $ROOT_NODE --arg z $CHILD_NODE_SECOND &#39;.&#39;$ROOT_NODE&#39;[&#39;$i&#39;].&#39;$CHILD_NODE_SECOND&#39;&#39;)

        RESULT=$( echo $ROOT_NODE,$CHILD_NODE_FIRST\=$FIRST $CHILD_NODE_SECOND\=$SECOND $TIME)
        curl -i -silent -XPOST &amp;quot;$INFLUXHOST&amp;quot; -u &amp;quot;$AUTHDETAILS&amp;quot; --data-binary &amp;quot;$RESULT&amp;quot; &amp;gt; /dev/null

        let i=i+1
done
DATE=$(date +&amp;quot;%c&amp;quot;)
echo $DATE - Wrote $i entries to $INFLUXHOST &amp;gt;&amp;gt; /var/log/influxcollectors/$ROOT_NODE.log
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>